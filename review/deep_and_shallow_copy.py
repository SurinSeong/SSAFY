a = '123' # 문자열 : 불변

b = a

print(id(a), id(b)) # 주소 동일
# 이유는? b = a : a에 저장되어 있는 주소 값을 b에게 전달한다.

a = '456' # 재할당, 주소 바뀜 (b와의 주소가 달라짐)
print(id(a), id(b))

## 리스트
a = [1, 2, 3, 4]

b = a # a와 b의 주소 동일

a[1] = 10 # 이때, a와 b의 주소는 동일하다
# 왜냐하면, 리스트 자체로도 주소 값이 존재하고, 리스트 요소에도 주소 값이 존재한다.
# 따라서, b에 a를 주는 것은 a의 리스트 주소를 전달하는 것

b = a[:] # 객체가 새로 생성됨 -> 주소가 새로 만들어짐.

# 중첩 리스트라면, 리스트 안의 리스트 주소 또한 고려해야 함.
# 위의 방법처럼 하면, 가장 바깥쪽의 리스트 주소만 바뀌고 내부의 주소는 바뀌지 않은 것으로 판단.
# ==> 슬라이싱 기법을 이용한 깊은 복사

# 만약 중첩이 아주 많이 되어 있다면, 계속 슬라이싱 기법을 이용해서 새로운 객체를 생성해야 한다. 따라서 이것을 만들어 놓은 것이 copy 모듈의 deepcopy이다.

